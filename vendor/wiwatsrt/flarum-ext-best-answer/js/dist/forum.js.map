{"version":3,"sources":["webpack://@WiwatSrt/best-answer/webpack/bootstrap","webpack://@WiwatSrt/best-answer/./forum.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerAction.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerAttribute.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerBadge.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerFirstPost.js","webpack://@WiwatSrt/best-answer/./src/forum/index.js","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['Model']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['app']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Badge']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Button']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/CommentPost']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Post']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/PostMeta']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['extend']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/icon']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/userOnline']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/username']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['models/Discussion']\""],"names":["extend","CommentPost","prototype","items","post","props","discussion","isHidden","canSelectBestAnswer","app","session","user","attribute","id","isBestAnswer","bestAnswerPost","pushAttributes","add","Button","component","children","translator","trans","className","onclick","save","bestAnswerPostId","relationships","data","then","current","DiscussionPage","stream","update","m","redraw","route","posts","PostComponent","attrs","Discussion","has","Badge","type","icon","label","number","userOnline","href","config","username","PostMeta","trust","contentHtml","initializers","Model","hasOne","addBestAnswerAction","addBestAnswerAttribute","addBestAnswerBadge","addBestAnswerFirstPost"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\r\n","import app from 'flarum/app';\r\nimport { extend } from 'flarum/extend';\r\nimport Button from 'flarum/components/Button';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\n\r\nexport default function() {\r\n    extend(CommentPost.prototype, 'actionItems', function (items) {\r\n        var post = this.props.post;\r\n        var discussion = this.props.post.discussion();\r\n\r\n        if (post.isHidden() || !discussion.canSelectBestAnswer() || !app.session.user || discussion.attribute('startUserId') != app.session.user.id()) return;\r\n\r\n        var isBestAnswer = (discussion.bestAnswerPost() && discussion.bestAnswerPost() == post);\r\n        post.pushAttributes({isBestAnswer});\r\n\r\n        items.add('bestAnswer', Button.component({\r\n            children: app.translator.trans(isBestAnswer ? 'flarum-best-answer.forum.remove_best_answer' : 'flarum-best-answer.forum.this_best_answer'),\r\n            className: 'Button Button--link',\r\n            onclick: function onclick() {\r\n                isBestAnswer = !isBestAnswer;\r\n                discussion.save({\r\n                    bestAnswerPostId: isBestAnswer ? post.id() : 0,\r\n                    relationships: isBestAnswer ? {bestAnswerPost: post} : delete discussion.data.relationships.bestAnswerPost\r\n                }).then(() => {\r\n                    if (app.current instanceof DiscussionPage) {\r\n                        app.current.stream.update();\r\n                    }\r\n                    m.redraw();\r\n                });\r\n                if(isBestAnswer) {\r\n                    m.route(app.route.post(discussion.posts()[0]));\r\n                }\r\n            }\r\n        }));\r\n    });\r\n}","import app from 'flarum/app';\r\nimport { extend } from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport PostComponent from 'flarum/components/Post';\r\n\r\nexport default function() {\r\n    extend(CommentPost.prototype, 'headerItems', function (items) {\r\n        if (this.props.post.discussion().bestAnswerPost() == this.props.post && !this.props.post.isHidden()) {\r\n            items.add('isBestAnswer', app.translator.trans('flarum-best-answer.forum.best_answer_button'));\r\n        }\r\n    });\r\n\r\n    extend(PostComponent.prototype, 'attrs', function (attrs) {\r\n        if (this.props.post.discussion().bestAnswerPost() == this.props.post && !this.props.post.isHidden()) {\r\n            attrs.className += ' Post--bestAnswer';\r\n        }\r\n    });\r\n}","import app from 'flarum/app';\r\nimport { extend } from 'flarum/extend';\r\nimport Badge from 'flarum/components/Badge';\r\nimport Discussion from 'flarum/models/Discussion';\r\n\r\nexport default function() {\r\n    extend(Discussion.prototype, 'badges', function (items) {\r\n        if (this.bestAnswerPost() && !items.has('hidden')) {\r\n            items.add('bestAnswer', m(Badge, {\r\n                type: 'bestAnswer',\r\n                icon: 'fas fa-check',\r\n                label: app.translator.trans('flarum-best-answer.forum.best_answer')\r\n            }));\r\n        }\r\n    });\r\n}","import app from 'flarum/app';\r\nimport { extend } from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport icon from 'flarum/helpers/icon';\r\nimport PostMeta from 'flarum/components/PostMeta';\r\nimport username from 'flarum/helpers/username';\r\nimport userOnline from 'flarum/helpers/userOnline';\r\n\r\nexport default function() {\r\n    extend(CommentPost.prototype, 'footerItems', function (items) {\r\n\r\n        var discussion = this.props.post.discussion();\r\n\r\n        if (discussion.bestAnswerPost() && this.props.post.number() == 1 && !this.props.post.isHidden()) {\r\n            var post = discussion.bestAnswerPost();\r\n            if (post.isHidden()) return;\r\n            var user = discussion.bestAnswerPost().user();\r\n            items.add('bestAnswerPost', m(\r\n                'div',\r\n                {className: 'CommentPost'},\r\n                m(\".Post-header\",\r\n                    m('ul',\r\n                        m('li',\r\n                            {className: 'item-user'},\r\n                            m('.PostUser',\r\n                                userOnline(user),\r\n                                m('h3',\r\n                                    m(\r\n                                        'a',\r\n                                        {href: app.route.user(user), config: m.route},\r\n                                        username(user)\r\n                                    )\r\n                                )\r\n                            )\r\n                        ), m('li',\r\n                            {className: 'item-meta'},\r\n                            PostMeta.component({post})\r\n                        ), m('li',\r\n                            {className: 'item-bestAnswerButton'}, m('a',\r\n                                {\r\n                                    href: app.route.post(post),\r\n                                    config: m.route,\r\n                                    'data-number': post.number()\r\n                                },\r\n                                icon('fas fa-check'),\r\n                                app.translator.trans('flarum-best-answer.forum.best_answer_button')\r\n                            )\r\n                        )\r\n                    )\r\n                ),\r\n                m(\".Post-body\",\r\n                    m.trust(discussion.bestAnswerPost().contentHtml())\r\n                )\r\n            ), -10);\r\n        }\r\n    });\r\n}","import app from 'flarum/app';\r\nimport { extend } from 'flarum/extend';\r\nimport Discussion from 'flarum/models/Discussion';\r\nimport Model from 'flarum/Model';\r\nimport addBestAnswerAction from './addBestAnswerAction';\r\nimport addBestAnswerAttribute from './addBestAnswerAttribute';\r\nimport addBestAnswerBadge from './addBestAnswerBadge';\r\nimport addBestAnswerFirstPost from './addBestAnswerFirstPost';\r\n\r\napp.initializers.add('wiwatSrt-bestAnswer', function() {\r\n    Discussion.prototype.bestAnswerPost = Model.hasOne('bestAnswerPost');\r\n    Discussion.prototype.canSelectBestAnswer = Model.attribute('canSelectBestAnswer');\r\n\r\n    addBestAnswerAction();\r\n    addBestAnswerAttribute();\r\n    addBestAnswerBadge();\r\n    addBestAnswerFirstPost();\r\n});","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['components/PostMeta'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['helpers/userOnline'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['models/Discussion'];"],"sourceRoot":""}